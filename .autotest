# .autotest
require "autotest/restart"
require "autotest/timestamp"

module Autotest::Notify 

  def self.notify(title, msg, img, pri='low', time=4000) 
    `notify-send -i #{img} -u #{pri} -t #{time} '#{title}' '#{msg}'` 
  end 
 
  Autotest.add_hook :ran_command do |autotest| 
    begin 
      results = autotest.results 
      if results.last 
          output = results.last.gsub(/\e\[(\d+)m/,'') 
      else
          output = 'no message'
      end 
      images = "~/.autotest_images/"
      if output =~ /[1-9]\d*\sfailures?/ or (output =~ /example/) == nil 
        notify "Failure", "#{output}", "#{images}/ruby_red.png", 'normal'
      elsif output =~ /[1-9]\d*\spending?/ 
        notify "Pending", "#{output}", "#{images}/ruby_yellow.png", 'normal'
      else
        notify "Passed", "#{output}", "#{images}/ruby_green.png",'normal'
      end 
    rescue Exception => e 
      p "#{e.message} \n #{e.backtrace}"
    end 
  end 
  
end 